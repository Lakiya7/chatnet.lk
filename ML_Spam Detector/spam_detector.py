# -*- coding: utf-8 -*-
"""spam_detector.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VWETCfFjujOv7wZfud6Dj456dmnuaumA
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score, classification_report
import joblib

# Load the dataset
data = pd.read_csv('spam.csv', encoding='latin1', usecols=['v1', 'v2'])
data.columns = ['label', 'message']

# Convert labels to binary
data['label'] = data['label'].map({'ham': 0, 'spam': 1})

# Split the data into training and testing sets
X = data['message']
y = data['label']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)

# Convert text data into numeric data using CountVectorizer
vectorizer = CountVectorizer()
X_train = vectorizer.fit_transform(X_train)
X_test = vectorizer.transform(X_test)

# Train a Naive Bayes classifier
classifier = MultinomialNB()
classifier.fit(X_train, y_train)

# Predict and evaluate the classifier
predictions = classifier.predict(X_test)
accuracy = accuracy_score(y_test, predictions)
report = classification_report(y_test, predictions)

# Save the model and vectorizer
joblib.dump(classifier, 'spam_classifier.pkl')
joblib.dump(vectorizer, 'vectorizer.pkl')

print("Accuracy:", accuracy)
print("\nClassification Report:\n", report)